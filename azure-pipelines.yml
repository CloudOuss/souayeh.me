trigger:
- master

variables:
  buildConfiguration: 'Release'
  releaseBranchName: 'master'

stages:
- stage: Build
  displayName: 'Build app'
  jobs: 
  - job: Build
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-latest'
      demands:
        - npm

    variables:
      webRootDir: src/
      dotnetSdkVersion: '3.1.100'

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk for sonarcloud'
      inputs:
        packageType: sdk
        version: 2.2.203
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
      inputs:
        packageType: sdk
        version: $(dotnetSdkVersion)
    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
    - task: SonarCloudPrepare@1
      displayName: 'Prepare SonarCloud analysis'
      inputs:
        SonarCloud: 'sonarcloud-static-analysis'
        organization: '$(SonarOrganization)'
        projectKey: '$(SonarProjectKey)'
        projectName: '$(SonarProjectName)'
        projectVersion: '$(Build.BuildNumber)'
        extraProperties: |
          sonar.exclusions=**/wwwroot/assets/scss/vendor/**
      condition: |
        and
        (
          succeeded(),
          eq(variables['Build.Reason'], 'PullRequest'),
          eq(variables['System.PullRequest.TargetBranch'], 'master')
        )
    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true
    - task: SonarCloudAnalyze@1
      displayName: 'Run SonarCloud code analysis'
    - task: SonarCloudPublish@1
      displayName: 'Publish SonarCloud quality gate results'
    - task: WhiteSource Bolt@19
      displayName: 'Run WhiteSource Bolt'
      inputs:
        cwd: '$(webRootDir)'
      condition: succeeded()
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      condition: succeeded()

- stage: Deploy
  displayName: 'Deploy to website'
  dependsOn: Build
  condition: |
    and
    (
      succeeded(),
      eq(variables['Build.SourceBranchName'], variables['releaseBranchName'])
    )
  jobs:
  - job: Placeholder
    displayName: 'Placeholder for release'
    steps:
      - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)"'
        displayName: 'echo placeholder'